// <auto-generated />
using System;
using BanMoHinh.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BanMoHinh.API.Migrations
{
    [DbContext(typeof(MyDbContext))]
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
    [Migration("20231113161343_13112023")]
    partial class _13112023
========
    [Migration("20231119160201_db1")]
    partial class db1
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BanMoHinh.Share.Models.Adress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("9b490f96-e42a-42c8-a8fc-1eff7c30e0f4"),
========
                            Id = new Guid("9b3f0c0a-290e-47c7-b37a-61d3bc2eefe9"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            BrandName = "Brand 1"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("1aa587aa-e3d0-48a0-b463-754ef3f701bc"),
========
                            Id = new Guid("5b26d63d-4144-4ef4-8031-646d661b4cd7"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            BrandName = "Brand 2"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("d4efabe6-7006-4d0b-b8f5-285983e42dd4"),
========
                            Id = new Guid("0ac20c8b-46fa-4378-8a13-852f8062f377"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            BrandName = "Brand 3"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("60bbb486-60ae-4322-a9df-7a62979bd717"),
========
                            Id = new Guid("99cf50e4-591b-407c-b517-4b9e681a6117"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            BrandName = "Brand 4"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("e52d6f07-e554-4a74-bf55-6197aa41678e"),
========
                            Id = new Guid("77b3ddb9-3679-46ad-9381-18b9f74dd241"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            BrandName = "Brand 5"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductDetail_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductDetail_ID");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("4218c663-a4a0-41d9-9803-a81b9516503f"),
========
                            Id = new Guid("a35536b0-989b-48d3-afbd-366c5f563658"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            CategoryName = "Category 1"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("362c812f-5790-4ec0-bb05-6b6ccae7fd3f"),
========
                            Id = new Guid("e5233bd7-b2af-4df3-9d5a-2a148040da3d"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            CategoryName = "Category 2"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("2b67a9b4-75db-41de-8d25-8cd967191331"),
========
                            Id = new Guid("fc9bceb2-0605-49ff-8439-9b3856e0be61"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            CategoryName = "Category 3"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("bb916f5c-c51b-4220-b4ef-a910813ed87c"),
========
                            Id = new Guid("1563d6dd-8e83-4d64-aaeb-f48bcf4d4f22"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            CategoryName = "Category 4"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("9f767ea1-f374-4540-aea6-774cf48ef6f0"),
========
                            Id = new Guid("51d2f177-03b8-4b7f-8e2a-e5a00488efec"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            CategoryName = "Category 5"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Colors", b =>
                {
                    b.Property<Guid>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorId");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("c0a6c036-eda1-465e-99c8-4e818f55e617"),
========
                            ColorId = new Guid("80538c0a-014a-4b18-b868-3f4622afb490"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#000000",
                            ColorName = "Đen"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("4143ab44-e779-4c17-84d5-52eac5e6f7aa"),
========
                            ColorId = new Guid("5959a9e5-0278-4d63-8fc3-8b557984afde"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#FFFFFF",
                            ColorName = "Trắng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("fa6c70c1-dd79-461f-837d-8803cd28a098"),
========
                            ColorId = new Guid("119ce713-e16e-4c23-b687-f84e4b7110e4"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#FF0000",
                            ColorName = "Đỏ"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("e1252c19-c29a-477f-880f-6920a1b6a545"),
========
                            ColorId = new Guid("069ba292-8fec-4483-b8da-5d5e1e6ca1d8"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#00FF00",
                            ColorName = "Xanh lá cây"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("23e1d459-9174-4315-9b6c-a6c5010206e5"),
========
                            ColorId = new Guid("b84d08b7-fb3f-4aa9-afb8-841304e96f8a"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#0000FF",
                            ColorName = "Xanh dương"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("bff32bbc-bc15-4ac5-9bca-62aef0772560"),
========
                            ColorId = new Guid("a14ae2eb-6941-4765-9f83-b00e916a080c"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#FFFF00",
                            ColorName = "Vàng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("a93fbf66-d85b-411c-8a75-aca94a15d07c"),
========
                            ColorId = new Guid("c677db30-379b-4352-88cb-0b32b6ad0b4b"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#FFA500",
                            ColorName = "Cam"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("d587e0b6-203d-48be-ae0c-bb687e8eb3a4"),
========
                            ColorId = new Guid("27695ab5-2aae-4dcf-acb6-c4102f1e4265"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#800080",
                            ColorName = "Tím"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("122ef464-a2f1-462f-af8a-ebb26ffd84e8"),
========
                            ColorId = new Guid("1a844407-f341-4720-a163-40bcc652ebeb"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#FFC0CB",
                            ColorName = "Hồng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("062371a8-4dc3-4fea-8fb7-66861e21d0e3"),
========
                            ColorId = new Guid("e49199ad-c3f7-439f-9385-8e127b815fef"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#808080",
                            ColorName = "Xám"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("8e0be780-c8b0-4a34-a13b-a96e7599d0f4"),
========
                            ColorId = new Guid("1b05e7c4-3181-41c2-a9e8-84b5c676b305"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#A52A2A",
                            ColorName = "Nâu"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("7fd0dd1f-e137-4089-8a7e-acf7712971d5"),
========
                            ColorId = new Guid("752125bb-c598-4927-b1a4-1ca39c22c258"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#000080",
                            ColorName = "Xanh lam"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("41e27708-75fa-4fb0-bf81-98cb07a19bdd"),
========
                            ColorId = new Guid("8124a5cb-f808-45dd-80aa-d75cf303889c"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#00BFFF",
                            ColorName = "Xanh da trời"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("66f095a6-bdae-472f-90d1-161755d1af5d"),
========
                            ColorId = new Guid("d24f76ff-c03e-47de-a1f8-7ff17157417d"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#FFDAB9",
                            ColorName = "Hồng phấn"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("b6c7763f-ed84-494e-a337-c89ba1ee8ce9"),
========
                            ColorId = new Guid("f6b77d2b-13f3-4c1c-8093-d213549c9669"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#C0C0C0",
                            ColorName = "Xám tro"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            ColorId = new Guid("6f71c8e8-3bb7-4912-9744-ee036b456fe0"),
========
                            ColorId = new Guid("3734e267-efb8-4409-a6b3-adaf54e5f93f"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            ColorCode = "#C0C0C0",
                            ColorName = "Bạc"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("827fa1bd-bc38-44a7-97d5-c77581080320"),
========
                            Id = new Guid("b0198cb6-0217-4696-9b6a-4b64c56346ec"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            MaterialName = "Sắt"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("18a10019-5a6a-45a3-8b7f-962efff912e0"),
========
                            Id = new Guid("ba265fa6-2b4d-4fc2-b2df-f0f427886add"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            MaterialName = "Nhựa pvc"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("09420567-67ea-4065-be97-12a4cc52d109"),
========
                            Id = new Guid("9933d484-b7d6-469b-b5b4-dcc93029b423"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            MaterialName = "Gỗ"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Delivery_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Payment_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecipientAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ship_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalAmout")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalAmoutAfterApplyingVoucher")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("VoucherValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("UserId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("7095e5e4-7b8e-4530-85d9-b77c4776c962"),
========
                            Id = new Guid("478550b4-a57f-4f02-a14a-223922c4c8f5"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Đang được xử lý"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("4db39967-fd9a-4715-9201-0ed5025279ed"),
========
                            Id = new Guid("7d3c634c-324a-4b80-9373-f942921b64b4"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Chờ lấy hàng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("304e1a4d-f53c-4e84-bef9-2f3ef64d383a"),
========
                            Id = new Guid("c0a8f8c1-e468-4727-9533-2f73656baa21"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Đang giao hàng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("d8bf59ed-2793-46a7-ac9e-a9a09c78673b"),
========
                            Id = new Guid("19d6a5dc-736d-4c0a-88a4-90a97ad6a2fd"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Giao hàng thành công"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("1d4f0bfb-e2a7-4195-8c11-3fa351caf65c"),
========
                            Id = new Guid("519eb4d6-6092-4c08-b5ef-430d27f760c2"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Giao hàng không thành công"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("3a125bc3-9f3d-4306-937a-c486a0c3c448"),
========
                            Id = new Guid("eb4533ab-e01e-45ad-80ea-10a7e240d525"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Hủy đơn"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("2875d97a-c8de-4dc5-8857-35ec1aee8fd8"),
========
                            Id = new Guid("ecfce80e-b992-422d-8c92-61d728d4503a"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Yêu cầu trả hàng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("c5ee777b-911e-442c-9efc-f2aaa73b4190"),
========
                            Id = new Guid("988ad1b7-3c57-4e2f-8657-02d089926c27"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            OrderStatusName = "Chấp nhận trả hàng"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("f5a8622c-775b-4b94-ab8e-c13430063d19"),
========
                            Id = new Guid("bc0ff280-df20-4ce2-a809-30f2c3caaa67"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            PaymentName = "Thanh toán khi nhận hàng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("f517be0a-f654-4f76-bc86-624446099c49"),
========
                            Id = new Guid("a6f79672-f0de-42d8-ae7a-1bc7f5595de7"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            PaymentName = "Thanh toán Online"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TittleImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Long_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductDetail");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Rank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoinsMax")
                        .HasColumnType("int");

                    b.Property<int?>("PointsMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rank");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("671c5ec5-c6e6-424c-817e-b1b4a57a3fda"),
========
                            Id = new Guid("90a580c4-cdf3-4cf2-9b73-139083043f4c"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Bạc",
                            PoinsMax = 1000000,
                            PointsMin = 0
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("8056df54-125c-4350-bf09-e0d239539920"),
========
                            Id = new Guid("2a87303c-ccac-4d8d-aefc-dd13b1e6c0dc"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Vàng",
                            PoinsMax = 3000000,
                            PointsMin = 1000001
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("f90a507b-1494-4cb6-aadd-28f41be7fa3e"),
========
                            Id = new Guid("86fc745d-73eb-4a97-8a77-166ad22b3041"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Kim Cương",
                            PoinsMax = 10000000,
                            PointsMin = 3000001
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Rate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("59a491f2-2083-47ce-91f0-6cac2a2eb61a"),
                            ConcurrencyStamp = "42e407b9-7426-49a3-a9e3-01ec2d32d010",
========
                            Id = new Guid("a5f923b7-2f22-4a01-bed8-6cd1c3a3a21a"),
                            ConcurrencyStamp = "8a351fba-caea-4985-ae82-d7716b214799",
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("d462c50b-e955-47f2-a70b-2291afaee9fd"),
                            ConcurrencyStamp = "3570d24c-5cd1-4e20-953a-01b5f0c90253",
========
                            Id = new Guid("27ee3f10-62d4-4d69-a9c1-9af433e03873"),
                            ConcurrencyStamp = "3ff385e0-bcfd-4e4a-976e-16dfc62c652e",
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("febef870-6173-4204-804e-ac80720c0c97"),
                            ConcurrencyStamp = "b34751f3-f4bb-499a-b894-965ece1ca8a5",
========
                            Id = new Guid("9e5bc4ff-6a9a-47cb-9588-ab844b612a21"),
                            ConcurrencyStamp = "7b157af5-bf58-4e14-80cc-c761593fa7ec",
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("SizeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("fac89534-e4dc-460a-b96f-55938b71460e"),
========
                            Id = new Guid("33c9916d-770f-47f2-8ace-85fe947af28b"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Height = 30.0,
                            SizeName = "Size 1",
                            Width = 30.0
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("5d6a61b7-e49d-43bf-96fd-0ba1314c01af"),
========
                            Id = new Guid("37973cf8-9710-4b4c-8a91-dddafc550575"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Height = 30.0,
                            SizeName = "Size 2",
                            Width = 30.0
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("db7b2b87-54c5-4bdc-bfff-ac0117a49a3b"),
========
                            Id = new Guid("e24bb620-2afd-4d73-8104-d2bad0cb0bf1"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Height = 30.0,
                            SizeName = "Size 3",
                            Width = 30.0
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("1b25d0bc-1402-4bf9-bacb-b2c05d2e11f5"),
========
                            Id = new Guid("1b6b6914-b557-4aeb-820e-4d397b2cec44"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Height = 30.0,
                            SizeName = "Size 4",
                            Width = 30.0
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("0d4d955e-ccd3-4080-af4f-156dd7ae4c57"),
========
                            Id = new Guid("933bed4a-cefc-44e4-b2d9-8bc3ffd138ae"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Height = 30.0,
                            SizeName = "Size 5",
                            Width = 30.0
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<Guid>("RankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RankId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.UserVoucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherUser");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Minimum_order_value")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.Property<Guid?>("VoucherStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VoucherTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VoucherStatusId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.VoucherProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherDetails");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.VoucherStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("voucherstatus");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("be05dee1-4570-427f-a20a-19fcabfa98dd"),
========
                            Id = new Guid("de9c8fb5-fb47-47d8-8d52-310f2f3450c9"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Used"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("a7e90e6d-3e7d-4462-baad-4388a3cc5ac1"),
========
                            Id = new Guid("0d0f2eb4-5326-47d4-8719-3a9ffc9dd964"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Active"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("a70515ea-b96a-4cd4-93be-822c2c2bf4c6"),
========
                            Id = new Guid("608c376d-119d-4225-a2e6-075c6a1269b6"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Expired"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.VoucherType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VoucherType");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("470f6999-4f6e-4766-868e-b38d69645776"),
========
                            Id = new Guid("1f0baa17-8126-41a4-9139-7580e1dbe9d0"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Khánh hàng"
                        },
                        new
                        {
<<<<<<<< HEAD:BanMoHinh.API/Migrations/20231113161343_13112023.Designer.cs
                            Id = new Guid("8101a90d-c95b-44ad-9e01-8ae99dad5e0c"),
========
                            Id = new Guid("c28b09c1-1cf2-443b-99f3-d6dcd8f4b3e1"),
>>>>>>>> hung:BanMoHinh.API/Migrations/20231119160201_db1.Designer.cs
                            Name = "Sản phẩm"
                        });
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.WishList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("WishList");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Adress", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.User", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Cart", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.CartItem", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Cart", "Cart")
                        .WithMany("CartItem")
                        .HasForeignKey("CartId");

                    b.HasOne("BanMoHinh.Share.Models.ProductDetail", "ProductDetail")
                        .WithMany("CartItem")
                        .HasForeignKey("ProductDetail_ID");

                    b.Navigation("Cart");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Order", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.OrderStatus", "OrderStatus")
                        .WithMany("Order")
                        .HasForeignKey("OrderStatusId");

                    b.HasOne("BanMoHinh.Share.Models.Payment", "PaymentType")
                        .WithMany("Order")
                        .HasForeignKey("PaymentId");

                    b.HasOne("BanMoHinh.Share.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.HasOne("BanMoHinh.Share.Models.Voucher", "Voucher")
                        .WithMany("Orders")
                        .HasForeignKey("VoucherId");

                    b.Navigation("OrderStatus");

                    b.Navigation("PaymentType");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.OrderItem", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Order", "Order")
                        .WithMany("OrderItem")
                        .HasForeignKey("OrderId");

                    b.HasOne("BanMoHinh.Share.Models.ProductDetail", "productDetail")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductDetailId");

                    b.Navigation("Order");

                    b.Navigation("productDetail");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Post", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Product", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Brand", "Brand")
                        .WithMany("Product")
                        .HasForeignKey("BrandId");

                    b.HasOne("BanMoHinh.Share.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId");

                    b.HasOne("BanMoHinh.Share.Models.Material", "Material")
                        .WithMany("Product")
                        .HasForeignKey("MaterialId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.ProductDetail", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Colors", "Colors")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ColorId");

                    b.HasOne("BanMoHinh.Share.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId");

                    b.HasOne("BanMoHinh.Share.Models.Size", "Size")
                        .WithMany("ProductDetails")
                        .HasForeignKey("SizeId");

                    b.Navigation("Colors");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.ProductImage", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.ProductDetail", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductDetailId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Rate", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.User", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Rank", "Rank")
                        .WithMany("Users")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.UserVoucher", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.User", "User")
                        .WithMany("VoucherUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BanMoHinh.Share.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Voucher", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.VoucherStatus", "VoucherStatus")
                        .WithMany("Vouchers")
                        .HasForeignKey("VoucherStatusId");

                    b.HasOne("BanMoHinh.Share.Models.VoucherType", "VoucherType")
                        .WithMany("Vouchers")
                        .HasForeignKey("VoucherTypeId");

                    b.Navigation("VoucherStatus");

                    b.Navigation("VoucherType");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.VoucherProduct", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Product", "Product")
                        .WithMany("VoucherProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BanMoHinh.Share.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.WishList", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Product", "Products")
                        .WithMany("WishLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BanMoHinh.Share.Models.User", "User")
                        .WithMany("WishLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BanMoHinh.Share.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("BanMoHinh.Share.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Brand", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Cart", b =>
                {
                    b.Navigation("CartItem");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Colors", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Material", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Order", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.OrderStatus", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Payment", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");

                    b.Navigation("VoucherProduct");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.ProductDetail", b =>
                {
                    b.Navigation("CartItem");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Rank", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Size", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.User", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Orders");

                    b.Navigation("Posts");

                    b.Navigation("VoucherUsers");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.Voucher", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.VoucherStatus", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("BanMoHinh.Share.Models.VoucherType", b =>
                {
                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}


@model BanMoHinh.Share.ViewModels.ProductDetailVM

@{
    HttpClient _httpClient = new HttpClient();
    ViewData["Title"] = "Thêm mới";
    Layout = "~/Areas/Admin/Shared/_LayoutAdmin.cshtml";
}
<style>
input[type="file"]{
    display: none;
}
#images{
    width: 90%;
    position: relative;
    margin: auto;
    display: flex;
    justify-content: space-evenly;
    gap: 20px;
    flex-wrap: wrap;
}
figure{
    width: 20%;
}
img{
    width: 100%;
}
figcaption{
    text-align: center;
    font-size: 2.4vmin;
    margin-top: 0.5vmin;
}
.delete-button {
    background-color: red;
    color: white;
    padding: 5px;
    cursor: pointer;
    border: none;
    margin-top: 5px;
    width: 100%;
  }
</style>
<div class="app-title">
        <ul class="app-breadcrumb breadcrumb side">
          <li class="breadcrumb-item active"><a asp-area="Admin" asp-controller="Home" asp-action="Index">Trang Chủ</a></li>
          <li class="breadcrumb-item active"><a asp-action="Show">Danh sách chi tiết sản phẩm</a></li>
          <li class="breadcrumb-item active"><a asp-action="Create">Thêm mới </a></li>
        </ul>    
</div>
<div class="row">
    <div class="container">
        <form asp-action="Create" enctype="multipart/form-data" >
            <div asp-validation-summary="ModelOnly"  class="text-danger" ></div>
            
            <div class="form-group">
                <label class="control-label">Tên sản phẩm</label>
                @{
                    <select name="productId" onchange="this.value;" asp-items="@ViewBag.ProductProp" class="form-control">
                    <option>--Chọn sản phẩm--</option>
                </select>
                <span asp-validation-for="ProductId" class="text-danger"></span>
                }
                
            </div>
            <div class="form-group">
                <label class="control-label">Tên size</label>
                @{
                    <select name="sizeId" onchange="this.value;" asp-items="@ViewBag.Size" class="form-control">
                    <option>--Chọn size--</option>
                </select>
                <span asp-validation-for="SizeId" class="text-danger"></span>
                }
                
            </div>
            <div class="form-group">
                <label class="control-label">Tên màu</label>
                @{
                    <select name="colorId" onchange="this.value;" asp-items="@ViewBag.Color" class="form-control">
                    <option>--Chọn màu--</option>
                </select>
                <span asp-validation-for="ColorId" class="text-danger"></span>
                }
               
            </div>
            <div class="form-group">
                <label class="control-label">Số lượng</label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Giá nhập</label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Giá bán</label>
                <input asp-for="PriceSale" class="form-control" />
                <span asp-validation-for="PriceSale" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <label class="control-label">Ngày nhập</label>
                <input asp-for="Create_At" class="form-control" />
                <span asp-validation-for="Create_At" class="text-danger"></span>
            </div>*@
            @*<div class="form-group">
                <label  class="control-label">Ngày cập nhật</label>
                <input asp-for="Update_At" class="form-control" />
                <span asp-validation-for="Update_At" class="text-danger"></span>
            </div>*@
          
            <div class="form-group">
                <label  class="control-label">Mô tả</label>
                <div class="form-group space-top" >
                    <!-- (2): textarea sẽ được thay thế bởi CKEditor -->
                    <textarea asp-for="Description" id="edit" name="edit" cols="200" rows="80"></textarea>

                    <!-- (3): Code Javascript thay thế textarea có id='editor1' bởi CKEditor -->
                    <script>

                        CKEDITOR.replace('edit');

                    </script>
                </div>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
            <div class="form-group">
              <input type="file" id="file-input" asp-for="filecollection" accept="image/*" onchange="preview()" multiple>
                @* <input type="file" id="file-input" asp-for="filecollection" accept="image/*" oninput="preview()" multiple> *@

              <label for="file-input">
                <i class="fas fa-upload"></i> Chọn ảnh
              </label>
              <p id="num-of-files">Không có file nào</p>
              <div id="images"></div>
            </div>
            @*<div class="form-group">
                <label  class="control-label">Trạng thái</label>
                <input asp-for="Status" class="form-control" />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>*@
           <div class="form-group">
                <button class="btn btn-success m-1" type="submit" >Tạo</button>
                <a class="btn btn-secondary" asp-action="Show" >Quay lại</a>
            </div>
        </form>
    </div>
</div>

<!--Font Awesome Icons-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Rubik&display=swap" rel="stylesheet">


<script>
    let numOfFiles = document.getElementById("num-of-files");
    let selectedImages = []; // Mảng để lưu giữ ảnh đã chọn
    const maxAllowedFiles = 5; // Số lượng tối đa ảnh được chọn

    function preview() {
        console.log("Input changed!");
        let fileInput = document.getElementById("file-input");
        let imageContainer = document.getElementById("images");

        // Kiểm tra nếu số lượng ảnh vượt quá giới hạn
        if (fileInput.files.length + selectedImages.length > maxAllowedFiles) {
            alert(`Chỉ được chọn tối đa ${maxAllowedFiles} ảnh.`);
            return; // Ngăn không cho hàm tiếp tục thực thi
        }

        for (let i = 0; i < fileInput.files.length; i++) {
            let file = fileInput.files[i];

            // Kiểm tra xem file đã được thêm vào mảng trước đó hay chưa
            if (!selectedImages.some(selectedImage => selectedImage.file.name === file.name)) {
                let figure = document.createElement("figure");
                let deleteButton = document.createElement("button");

                deleteButton.textContent = "Xoá";
                deleteButton.classList.add("delete-button");

                // Xử lý sự kiện click cho nút delete
                deleteButton.onclick = function () {
                    // Truyền tham số là file để xóa
                    deleteImage(figure, file);
                };

                figure.appendChild(deleteButton);

                let img = document.createElement("img");
                let imageUrl = URL.createObjectURL(file);
                img.setAttribute("src", imageUrl);
                figure.insertBefore(img, deleteButton);

                // Tạo đối tượng mới đại diện cho file đã chọn
                let selectedImage = {
                    file: file,
                    imageUrl: imageUrl
                };

                // Thêm đối tượng vào mảng selectedImages
                selectedImages.push(selectedImage);

                imageContainer.appendChild(figure);
            }
        }

        // Cập nhật thông tin số lượng file đã chọn
        updateNumOfFiles();

        // Không reset input file ở đây nữa
        // fileInput.value = '';
    }

    function deleteImage(figure, file) {
        // Xóa hình ảnh khỏi DOM
        figure.remove();

        // Xóa file khỏi mảng selectedImages
        selectedImages = selectedImages.filter(selectedImage => selectedImage.file !== file);

        // Cập nhật thông tin số lượng file đã chọn
        updateNumOfFiles();
    }

    function updateNumOfFiles() {
        numOfFiles.textContent = `${selectedImages.length} ảnh đã chọn`;
    }
</script>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
